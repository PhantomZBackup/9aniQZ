name: OmniTest

on:
  workflow_dispatch:
    inputs:
      InURL:
        description: "InURL"
        required: true
        default: ""
        type: string
      AniName:
        description: "AniName"
        required: true
        default: ""
        type: string
      EpCode:
        description: "EpCode, 1x03|2x01"
        required: true
        default: ""
        type: string
      AniLang:
        description: "AniLang"
        required: true
        default: "en"
        type: choice
        options:
        - en
        - ja
        - und
      R3NC0D3R:
        description: "R3NC0D3R"
        required: true
        default: "VP9"
        type: choice
        options:
        - VP9
        - AV1
      VidRes:
        description: "VidRes"
        required: true
        default: "480"
        type: choice
        options:
        - "450"
        - "480"
        - "576"

env:
  SOURCERY: ${{ secrets.SOURCERY }}
  LocationOnIndex: "td:/9animeStreamZ"
  InURL: ${{ github.event.inputs.InURL }}
  AniName: ${{ github.event.inputs.AniName }}
  EpCode: ${{ github.event.inputs.EpCode }}
  AniLang: ${{ github.event.inputs.AniLang }}
  R3NC0D3R: ${{ github.event.inputs.R3NC0D3R }}
  VidRes: ${{ github.event.inputs.VidRes }}
  RCLONE_CONFIG_URL: ${{ secrets.RCLONE_CONFIG_URL }}
  RCLONE_INSTALL_MIRROR: ${{ secrets.RCLONE_INSTALL_MIRROR }}
  FTOOL_ARC_URL: ${{ secrets.FTOOL_ARC_URL }}
  FTOOL_CONVERTER: ${{ secrets.FTOOL_CONVERTER }}
  FTOOL_PROBER: ${{ secrets.FTOOL_PROBER }}

jobs:
  primary:
    runs-on: ubuntu-latest

    outputs:
      ChunkDir: ${{ steps.set-params.outputs.ChunkDir }}
      ChunkEncDir: ${{ steps.set-params.outputs.ChunkEncDir }}
      AudioType: ${{ steps.set-params.outputs.AudioType }}
      TotalFrames: ${{ steps.set-params.outputs.TotalFrames }}
      OrigFrameRate: ${{ steps.set-params.outputs.OrigFrameRate }}
      FrameRate: ${{ steps.set-params.outputs.FrameRate }}
      matrix: ${{ steps.set-params.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup Tools
        run: |
          eval 'set -eo pipefail' 2>/dev/null
          eval 'set +o history' 2>/dev/null
          echo "$SOURCERY" | base64 -d > SOURCERY
          source ./SOURCERY &>/dev/null
          rm -f ./SOURCERY
          eval 'set -o history' 2>/dev/null
          DEOBFUS ./partials/EncCh.980c778e72ec
          DEOBFUS ./partials/EncDl.002e9d03fdd3
          DEOBFUS ./partials/EncRn.235b80260c6b
      - uses: actions/upload-artifact@v2
        with:
          name: something
          path: /usr/local/bin/ff*
      - name: "AniLoad Job - ${{env.AniName}} - ${{env.EpCode}}"
        run: |
          eval 'set -eo pipefail' 2>/dev/null
          eval 'set +o history' 2>/dev/null
          echo "$SOURCERY" | base64 -d > SOURCERY
          source ./SOURCERY &>/dev/null
          rm -f ./SOURCERY
          eval 'set -o history' 2>/dev/null
          DEOBFUS ./partials/EncTr.05d7f32e0d3e
      - name: Prepare Matrix
        id: set-params
        run: |
          echo "::set-output name=ChunkDir::${ChunkDir}"
          echo "::set-output name=ChunkEncDir::${ChunkEncDir}"
          echo "::set-output name=AudioType::${AudioType}"
          echo "::set-output name=TotalFrames::${TotalFrames}"
          echo "::set-output name=OrigFrameRate::${OrigFrameRate}"
          echo "::set-output name=FrameRate::${FrameRate}"
          export input_matrix=$(for i in $(seq -w 001 ${Chunks}); do
            printf "\"%s\"," "${i}"
          done)
          export matrix=[${input_matrix%,*}]
          echo "::set-output name=matrix::${matrix}"
          echo ${{ steps.set-params.outputs.matrix }}

  ordinary:
    runs-on: ubuntu-latest
    needs: primary

    strategy:
      fail-fast: true
      max-parallel: 7
      matrix:
        ChunkNum: ${{fromJson(needs.primary.outputs.matrix)}}

    env:
      ChunkNum: ${{ matrix.ChunkNum }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: something
          path: /usr/local/bin/
      - name: Preparation
        run: |
          eval 'set -eo pipefail' 2>/dev/null
          eval 'set +o history' 2>/dev/null
          echo "$SOURCERY" | base64 -d > SOURCERY
          source ./SOURCERY &>/dev/null
          rm -f ./SOURCERY
          eval 'set -o history' 2>/dev/null
          DEOBFUS ./partials/EncDl.002e9d03fdd3
          sudo chmod a+x /usr/local/bin/ff[mp]*
      - name: "AniWorker Job - ${{env.AniName}} ${{env.EpCode}} part_${{env.ChunkNum}}"
        id: get-warn
        env:
          ChunkDir: ${{ needs.primary.outputs.ChunkDir }}
          ChunkEncDir: ${{ needs.primary.outputs.ChunkEncDir }}
          AudioType: ${{ needs.primary.outputs.AudioType }}
          FrameRate: ${{ needs.primary.outputs.FrameRate }}
        run: |
          eval 'set -eo pipefail' 2>/dev/null
          eval 'set +o history' 2>/dev/null
          echo "$SOURCERY" | base64 -d > SOURCERY
          source ./SOURCERY &>/dev/null
          rm -f ./SOURCERY
          eval 'set -o history' 2>/dev/null
          DEOBFUS ./partials/EncWr.2f8bb14e0140

  final:
    runs-on: ubuntu-latest
    needs: [primary, ordinary]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: something
          path: /usr/local/bin/
      - name: Preparation
        run: |
          eval 'set -eo pipefail' 2>/dev/null
          eval 'set +o history' 2>/dev/null
          echo "$SOURCERY" | base64 -d > SOURCERY
          source ./SOURCERY &>/dev/null
          rm -f ./SOURCERY
          eval 'set -o history' 2>/dev/null
          DEOBFUS ./partials/EncCh.980c778e72ec
          DEOBFUS ./partials/EncDl.002e9d03fdd3
          sudo chmod a+x /usr/local/bin/ff[mp]*
      - name: "AniMerger Job - ${{env.AniName}} - ${{env.EpCode}}"
        env:
          ChunkDir: ${{ needs.primary.outputs.ChunkDir }}
          ChunkEncDir: ${{ needs.primary.outputs.ChunkEncDir }}
          AudioType: ${{ needs.primary.outputs.AudioType }}
          TotalFrames: ${{ needs.primary.outputs.TotalFrames }}
          OrigFrameRate: ${{ needs.primary.outputs.OrigFrameRate }}
        run: |
          eval 'set -eo pipefail' 2>/dev/null
          eval 'set +o history' 2>/dev/null
          echo "$SOURCERY" | base64 -d > SOURCERY
          source ./SOURCERY &>/dev/null
          rm -f ./SOURCERY
          eval 'set -o history' 2>/dev/null
          DEOBFUS ./partials/EncMr.9534d8a92da7
      - uses: kolpav/purge-artifacts-action@v1
        if: ${{ success() }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          expire-in: 0
