name: 9anime R3Encod3r

on:
  workflow_dispatch:
    inputs:
      AniName:
        description: "Anime Name"
        required: true
        default: ""
        type: string
      EpCode:
        description: "EpCode, 1x03|2x01"
        required: true
        default: ""
        type: string
      DubbedAud:
        description: "English Dubbed?"
        required: true
        type: boolean
        default: false
      SpeedProf:
        description: "SpeedProf"
        required: true
        default: "2x450"
        type: choice
        options:
        - "0x450"
        - "3x450"
        - "2x450"
        - "1x450"
        - "2x360"
        - "1x360"
      JobSequence:
        description: "JobSequence"
        required: true
        type: number
        default: 0
      QCTest:
        description: "Quality Control"
        required: true
        type: boolean
        default: false

env:
  SOURCERY: ${{ secrets.SOURCERY }}
  LocationOnIndex: "td:/9animeStreamZ"
  ChunkLocationOnIndex: "td:/9animeChunkZ"
  AniName: ${{ github.event.inputs.AniName }}
  EpCode: ${{ github.event.inputs.EpCode }}
  DubbedAud: ${{ github.event.inputs.DubbedAud }}
  SpeedProf: ${{ github.event.inputs.SpeedProf }}
  JobSequence: ${{ github.event.inputs.JobSequence }}
  RCLONE_CONFIG_URL: ${{ secrets.RCLONE_CONFIG_URL }}
  RCLONE_INSTALL_MIRROR: ${{ secrets.RCLONE_INSTALL_MIRROR }}
  FTOOL_ARC_URL: ${{ secrets.FTOOL_ARC_URL }}
  FTOOL_CONVERTER: ${{ secrets.FTOOL_CONVERTER }}
  FTOOL_PROBER: ${{ secrets.FTOOL_PROBER }}

jobs:
  primary:
    name: Prepare Steps for R3Encod3r
    runs-on: ubuntu-latest

    outputs:
      EncSpeed: ${{ steps.set-params.outputs.EncSpeed }}
      R3NC0D3R: ${{ steps.set-params.outputs.R3NC0D3R }}
      VidRes: ${{ steps.set-params.outputs.VidRes }}
      GOPType: ${{ steps.set-params.outputs.GOPType }}
      AudioType: ${{ steps.set-params.outputs.AudioType }}
      AniLang: ${{ steps.set-params.outputs.AniLang }}
      APIState: ${{ steps.set-params.outputs.APIState }}
      finalChunk: ${{ steps.set-params.outputs.finalChunk }}
      matrix: ${{ steps.set-params.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - name: GitHub Auth
        uses: rokibhasansagar/custom_workflows/git_config@main
        env:
          PAT: ${{ secrets.GH_TOKEN }}
      - name: Checkout EncToolZ
        env:
          ReqdEncToolZ: "rtools"
        run: |
          eval 'set -eo pipefail' 2>/dev/null && eval 'set +o history' 2>/dev/null
          echo "$SOURCERY" | base64 -d > SOURCERY
          source ./SOURCERY &>/dev/null && rm -f ./SOURCERY && eval 'set -o history' 2>/dev/null
          DEOBFUS ./21-EncTool-b473ab7b69f5
      - name: Create EncMatrix
        run: |
          eval 'set -eo pipefail' 2>/dev/null && eval 'set +o history' 2>/dev/null
          echo "$SOURCERY" | base64 -d > SOURCERY
          source ./SOURCERY &>/dev/null && rm -f ./SOURCERY && eval 'set -o history' 2>/dev/null
          DEOBFUS ./41-EncMtrx-992e65a52755
      - name: Export Parameters
        id: set-params
        run: |
          echo "::set-output name=EncSpeed::${EncSpeed}"
          echo "::set-output name=R3NC0D3R::${R3NC0D3R}"
          echo "::set-output name=VidRes::${VidRes}"
          echo "::set-output name=GOPType::${GOPType}"
          echo "::set-output name=AudioType::${AudioType}"
          echo "::set-output name=AniLang::${AniLang}"
          echo "::set-output name=APIState::${APIState}"
          echo "::set-output name=finalChunk::${finalChunk}"
          echo "::set-output name=matrix::${matrix}"

  enc_9anime:
    name: Encode Phase
    runs-on: ubuntu-latest
    needs: primary

    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        ChunkNum: ${{fromJson(needs.primary.outputs.matrix)}}

    env:
      ChunkNum: ${{ matrix.ChunkNum }}
      EncSpeed: ${{ needs.primary.outputs.EncSpeed }}
      R3NC0D3R: ${{ needs.primary.outputs.R3NC0D3R }}
      VidRes: ${{ needs.primary.outputs.VidRes }}
      GOPType: ${{ needs.primary.outputs.GOPType }}
      AudioType: ${{ needs.primary.outputs.AudioType }}
      AniLang: ${{ needs.primary.outputs.AniLang }}
      QCTest: ${{ github.event.inputs.QCTest }}

    steps:
      - uses: actions/checkout@v3
      - name: GitHub Auth
        uses: rokibhasansagar/custom_workflows/git_config@main
        env:
          PAT: ${{ secrets.GH_TOKEN }}
      - name: Checkout EncToolZ
        env:
          ReqdEncToolZ: "ftools rtools"
        run: |
          eval 'set -eo pipefail' 2>/dev/null && eval 'set +o history' 2>/dev/null
          echo "$SOURCERY" | base64 -d > SOURCERY
          source ./SOURCERY &>/dev/null && rm -f ./SOURCERY && eval 'set -o history' 2>/dev/null
          DEOBFUS ./21-EncTool-b473ab7b69f5
      - name: ${{env.R3NC0D3R}} R3NC0D3R - Chunk_${{env.ChunkNum}} of ${{env.AniName}} - ${{env.EpCode}}
        run: |
          eval 'set -eo pipefail' 2>/dev/null && eval 'set +o history' 2>/dev/null
          echo "$SOURCERY" | base64 -d > SOURCERY
          source ./SOURCERY &>/dev/null && rm -f ./SOURCERY && eval 'set -o history' 2>/dev/null
          DEOBFUS ./68-EncPreW-0bb0bb1b6ca5
          DEOBFUS ./71-Enc2AIO-78605f212f8a
          if [[ ${QCTest} == true ]]; then
            DEOBFUS ./79-EncRehq-70ff84d69bfa
            if [[ ${R3C0D3} == true ]]; then
              DEOBFUS ./71-Enc2AIO-78605f212f8a
              DEOBFUS ./77-EncVMAF-e0b7ebdeae84 2>/dev/null || true
            fi
          else
            DEOBFUS ./77-EncVMAF-e0b7ebdeae84 2>/dev/null || true
          fi
          DEOBFUS ./89-EncUpld-3a2d6e66703c

  postEnc:
    name: Loop or Merge
    runs-on: ubuntu-latest
    needs: [primary, enc_9anime]

    env:
      APIState: ${{ needs.primary.outputs.APIState }}

    steps:
      - uses: actions/checkout@v3
      - name: Trigger Another Workflow for ${{env.AniName}} - ${{env.EpCode}}
        if: env.APIState == 'trigger'
        env:
          GH_TOKEN2: ${{ secrets.GH_TOKEN2 }}
          GH_TOKEN3: ${{ secrets.GH_TOKEN3 }}
          QCTest: ${{ github.event.inputs.QCTest }}
        run: |
          eval 'set -eo pipefail' 2>/dev/null && eval 'set +o history' 2>/dev/null
          echo "$SOURCERY" | base64 -d > SOURCERY
          source ./SOURCERY &>/dev/null && rm -f ./SOURCERY && eval 'set -o history' 2>/dev/null
          DEOBFUS ./97-EncSqnc-00e78d1bd279
      - name: GitHub Auth
        uses: rokibhasansagar/custom_workflows/git_config@main
        if: env.APIState == 'merge'
        env:
          PAT: ${{ secrets.GH_TOKEN }}
      - name: Checkout EncToolZ
        if: env.APIState == 'merge'
        env:
          ReqdEncToolZ: "ftools mtools rtools"
        run: |
          eval 'set -eo pipefail' 2>/dev/null && eval 'set +o history' 2>/dev/null
          echo "$SOURCERY" | base64 -d > SOURCERY
          source ./SOURCERY &>/dev/null && rm -f ./SOURCERY && eval 'set -o history' 2>/dev/null
          DEOBFUS ./21-EncTool-b473ab7b69f5
      - name: Merge Whole Episode of ${{env.AniName}} - ${{env.EpCode}}
        if: env.APIState == 'merge'
        env:
          R3NC0D3R: ${{ needs.primary.outputs.R3NC0D3R }}
          VidRes: ${{ needs.primary.outputs.VidRes }}
          GOPType: ${{ needs.primary.outputs.GOPType }}
          AudioType: ${{ needs.primary.outputs.AudioType }}
          AniLang: ${{ needs.primary.outputs.AniLang }}
          finalChunk: ${{ needs.primary.outputs.finalChunk }}
        run: |
          eval 'set -eo pipefail' 2>/dev/null && eval 'set +o history' 2>/dev/null
          echo "$SOURCERY" | base64 -d > SOURCERY
          source ./SOURCERY &>/dev/null && rm -f ./SOURCERY && eval 'set -o history' 2>/dev/null
          DEOBFUS ./91-EncMrgr-9fd78a7cecf9
